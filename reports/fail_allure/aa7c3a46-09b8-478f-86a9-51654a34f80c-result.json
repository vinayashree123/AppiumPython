{"name": "test_searchProduct", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <Amazon.pages.AddToCart.AddToCartPage object at 0x0000021A8C659250>, locatorvalue = 'Search Amazon.in', locatorType = 'text'\n\n    def clickElement(self, locatorvalue, locatorType='id'):\n        element = None\n        try:\n            locatorType = locatorType.lower()\n>           element = self.WaitForElement(locatorvalue, locatorType)\n\n..\\base\\BasePage.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\base\\BasePage.py:39: in WaitForElement\n    element = wait.until(lambda x: x.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'text(\"%s\")' % locatorvalue))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"75a2338e-9056-4c4b-a19c-41951ebd9ca2\")>\nmethod = <function BasePage.WaitForElement.<locals>.<lambda> at 0x0000021A8B6F85E0>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       NoSuchElementError: An element could not be located on the page using the given search parameters.\nE           at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\vnaganur\\.appium\\node_modules\\appium-uiautomator2-driver\\node_modules\\appium-android-driver\\lib\\commands\\find.js:75:11)\nE           at processTicksAndRejections (node:internal/process/task_queues:95:5)\nE           at AndroidUiautomator2Driver.findElOrElsWithProcessing (C:\\Users\\vnaganur\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:60:12)\nE           at AndroidUiautomator2Driver.findElement (C:\\Users\\vnaganur\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:75:12)\n\n..\\..\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <Amazon.tests.test_AddToCart.AddtocartpageTest testMethod=test_searchProduct>\n\n    @pytest.mark.run(order=2)\n    def test_searchProduct(self):\n>       self.ap.clickonSearch()\n\ntest_AddToCart.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\pages\\AddToCart.py:32: in clickonSearch\n    self.clickElement(self._clickSearch,'text')\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Amazon.pages.AddToCart.AddToCartPage object at 0x0000021A8C659250>, locatorvalue = 'Search Amazon.in', locatorType = 'text'\n\n    def clickElement(self, locatorvalue, locatorType='id'):\n        element = None\n        try:\n            locatorType = locatorType.lower()\n            element = self.WaitForElement(locatorvalue, locatorType)\n            element.click()\n            self.log.info(\"Clicked the Element found with Locatorvalue \" + locatorvalue + \" and with locatorType \" + locatorType)\n        except Exception as e:\n            self.log.error(\"Unable to click Element not found with Locatorvalue \" + locatorvalue + \" and with locatorType \" + locatorType)\n            self.log.exception(e)\n            self.takeScreenshot(locatorType)\n>           assert False\nE           AssertionError\n\n..\\base\\BasePage.py:70: AssertionError"}, "attachments": [{"name": "text", "source": "fee14978-17b0-49ac-888e-b79ff2dd860f-attachment.png", "type": "image/png"}, {"name": "log", "source": "0880f9d4-2619-4f40-b393-a2aa8c157d57-attachment.txt", "type": "text/plain"}], "start": 1692363533495, "stop": 1692363560980, "uuid": "6b538d4a-7c90-4011-aa7a-62449f493d7d", "historyId": "c167f72e83b9da251333696b25c62dc3", "testCaseId": "c167f72e83b9da251333696b25c62dc3", "fullName": "test_AddToCart.AddtocartpageTest#test_searchProduct", "labels": [{"name": "tag", "value": "run(order=2)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('beforeclass')"}, {"name": "suite", "value": "test_AddToCart"}, {"name": "subSuite", "value": "AddtocartpageTest"}, {"name": "host", "value": "GESLPG02JQTA"}, {"name": "thread", "value": "16028-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_AddToCart"}]}